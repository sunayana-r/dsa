let graph = [[0, 5, 0, 0, 20],
[5, 0, 15, 0, 4],
[0, 15, 0, 1, 3],
[0, 0, 1, 0, 2],
[20, 4, 3, 2, 0]];

function primsAlgorithm(graph, numOfNodes) {
    let key = new Array(numOfNodes).fill(Number.MAX_VALUE),
        visitedNodes = new Array(numOfNodes).fill(false)

    key[0] = 0
    let totalWeight = 0
    for (let currentNode = 0; currentNode < numOfNodes; currentNode++) {
        let minimumValueNode = -1
        for (let node = 0; node < numOfNodes; node++) {
            if (!visitedNodes[node] && (minimumValueNode == -1 || key[node] < key[minimumValueNode])) {
                minimumValueNode = node
            }
        }

        visitedNodes[minimumValueNode] = true
        totalWeight = totalWeight + key[minimumValueNode]

        for (let adjacentNode = 0; adjacentNode < numOfNodes; adjacentNode++) {
            if (!visitedNodes[adjacentNode] && (graph[minimumValueNode][adjacentNode] != 0 && graph[minimumValueNode][adjacentNode] < key[adjacentNode])) {
                key[adjacentNode] = graph[minimumValueNode][adjacentNode]
            }
        }
    }
    return totalWeight
}

console.log(primsAlgorithm(graph, 5))
